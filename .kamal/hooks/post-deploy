#!/bin/sh

echo "üîÑ Running post-deploy tasks..."

echo "Running on $(hostname)"
echo "Environment variables:"
env
echo DB_HOST is $DB_HOST
echo RAILS_MASTER_KEY is $RAILS_MASTER_KEY

docker ps

# Define the list of database roles to process
roles="primary cache queue cable"

# Loop through each database role and run migrations
for role in $roles; do
  if [ "$role" = "primary" ]; then
    echo "Running db:prepare for the primary database..."
    if bin/rails db:migrate; then
      echo "‚úÖ db:prepare completed for the primary database."
    else
      echo "‚ùå Failed to migrate the primary database. Aborting."
      exit 1
    fi
  else
    echo "Running db:migrate for the ${role} database..."
    if RAILS_ENV=production bin/rails db:migrate:${role}; then
      echo "‚úÖ db:migrate completed for the ${role} database."
    else
      echo "‚ùå Failed to migrate the ${role} database. Aborting."
      exit 1
    fi
  fi
done

# Restart background workers
echo "Restarting background workers..."
if bin/rails restart_workers; then
  echo "‚úÖ Background workers restarted successfully."
else
  echo "‚ùå Failed to restart background workers. Continuing with deployment."
fi

echo "$KAMAL_PERFORMER deployed $KAMAL_VERSION to $KAMAL_DESTINATION in $KAMAL_RUNTIME seconds"

echo "‚úÖ Post-deploy tasks completed successfully."
